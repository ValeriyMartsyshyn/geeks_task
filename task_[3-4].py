# -*- coding: utf-8 -*-
"""Task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k12usnNN9g6NeXxeg3SBS_q8-tP1Wc-1
"""
#Task3

import numpy as np
arr1 = np.array([[2, np.NaN, 4], [0.5, 7, np.NaN], [np.NaN, 8, 5]])
print('Initial array:\n', arr1)
arr1_transposed = np.transpose(arr1)
n = 0
while n < np.shape(arr1)[0]:
  index = None
  count = 0
  for i in np.isnan(arr1_transposed)[n]:
    if i:
      index = count
    count+=1
  lst = arr1_transposed[n]
  list_exception = list(lst[:index]) + list(lst[index+1:])
  mean = np.sum(list_exception)/len(list_exception)
  arr1_transposed[n][index] = mean
  print(arr1_transposed)
  n+=1
print('The final result is:\n', arr1)


#-----------------------------------------

#Task4

arr3 = np.array([-3, -2, -1, 0, 1, 2, 3])
arr3[arr3 < 0] = 0
arr3

